startedOn: 2023-02-20T14:45:25.9190154+01:00
finishedOn: 2023-02-20T14:45:26.8148391+01:00
duration: 00:00:00.8958237
results:
- executionGuid: ad291963-5ca3-420b-9cd6-c11915aa3432
  testResult: Passed
  message: >+
    Both sets have the same number of rows and their values match.


    Description: Count of rows

    First Data Source: AW

    First Query:

        SELECT COUNT(*) 
    FROM [Sales].[SalesOrderHeader] H

    JOIN Sales.SalesOrderDetail D

    ON D.SalesOrderID = H.SalesOrderID

    WHERE OnlineOrderFlag = 1



    Second Data Source: AWDW

    Second Query:

        SELECT COUNT(*) FROM [dbo].[FactInternetSales]


  startTime: 2023-02-20T14:45:25.9190736+01:00
  endTime: 2023-02-20T14:45:25.9663508+01:00
  duration: 00:00:00.0472772
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: c297e03e-a504-4c72-91c2-2a894271243b
    suite: Integration test
    order: 1
    testCase: Sales.SalesOrderHeader x dbo.FactInternetSales
    name: Sales.SalesOrderHeader x dbo.FactInternetSales
    testFullName: '[Integration test].[1].[Sales.SalesOrderHeader x dbo.FactInternetSales].[Sales.SalesOrderHeader x dbo.FactInternetSales]'
    descripiton: Count of rows
    firstDataSource: AW
    firstQuery: >
      SELECT COUNT(*) 

      FROM [Sales].[SalesOrderHeader] H

      JOIN Sales.SalesOrderDetail D

      ON D.SalesOrderID = H.SalesOrderID

      WHERE OnlineOrderFlag = 1
    secondDataSource: AWDW
    secondQuery: >
      SELECT COUNT(*) FROM [dbo].[FactInternetSales]
    expectation: SetsMatch
    timeout: 0
    settings:
      TestSuite: Integration test
      Order: 1
      TestCase: Sales.SalesOrderHeader x dbo.FactInternetSales
      Name: Sales.SalesOrderHeader x dbo.FactInternetSales
      Description: Count of rows
      First Data Source: AW
      First Query: >
        SELECT COUNT(*) 

        FROM [Sales].[SalesOrderHeader] H

        JOIN Sales.SalesOrderDetail D

        ON D.SalesOrderID = H.SalesOrderID

        WHERE OnlineOrderFlag = 1
      Second Data Source: AWDW
      Second Query: >
        SELECT COUNT(*) FROM [dbo].[FactInternetSales]
      Expectation: SetsMatch
  testDefinitionGuid: c297e03e-a504-4c72-91c2-2a894271243b
  testName: Sales.SalesOrderHeader x dbo.FactInternetSales
  testFullName: '[Integration test].[1].[Sales.SalesOrderHeader x dbo.FactInternetSales].[Sales.SalesOrderHeader x dbo.FactInternetSales]'
  testSuite: Integration test
  testCase: Sales.SalesOrderHeader x dbo.FactInternetSales
  description: Count of rows
  firstDataSource: AW
  firstQuery: >
    SELECT COUNT(*) 

    FROM [Sales].[SalesOrderHeader] H

    JOIN Sales.SalesOrderDetail D

    ON D.SalesOrderID = H.SalesOrderID

    WHERE OnlineOrderFlag = 1
  secondDataSource: AWDW
  secondQuery: >
    SELECT COUNT(*) FROM [dbo].[FactInternetSales]
  expectation: SetsMatch
- executionGuid: 58eac4e9-71dd-498a-82fc-9d054c53c1c6
  testResult: Passed
  message: >2+


    Description: Len of Card Number

    First Data Source: AW

    First Query:

        SELECT CardNumber FROM [Sales].[CreditCard] WHERE LEN(CardNumber) <> 14


  startTime: 2023-02-20T14:45:25.9684742+01:00
  endTime: 2023-02-20T14:45:25.9751191+01:00
  duration: 00:00:00.0066449
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: 23c1f929-cd80-4330-85ee-e740f06a0b70
    suite: Smoke test
    order: 2
    testCase: Sales.CreditCard
    name: Sales.CreditCard
    testFullName: '[Smoke test].[2].[Sales.CreditCard].[Sales.CreditCard]'
    descripiton: Len of Card Number
    firstDataSource: AW
    firstQuery: >
      SELECT CardNumber FROM [Sales].[CreditCard] WHERE LEN(CardNumber) <> 14
    secondDataSource: 
    secondQuery: 
    expectation: SetIsEmpty
    timeout: 0
    settings:
      TestSuite: Smoke test
      Order: 2
      TestCase: Sales.CreditCard
      Name: Sales.CreditCard
      Description: Len of Card Number
      First Data Source: AW
      First Query: >
        SELECT CardNumber FROM [Sales].[CreditCard] WHERE LEN(CardNumber) <> 14
      Expectation: SetIsEmpty
  testDefinitionGuid: 23c1f929-cd80-4330-85ee-e740f06a0b70
  testName: Sales.CreditCard
  testFullName: '[Smoke test].[2].[Sales.CreditCard].[Sales.CreditCard]'
  testSuite: Smoke test
  testCase: Sales.CreditCard
  description: Len of Card Number
  firstDataSource: AW
  firstQuery: >
    SELECT CardNumber FROM [Sales].[CreditCard] WHERE LEN(CardNumber) <> 14
  secondDataSource: 
  secondQuery: 
  expectation: SetIsEmpty
- executionGuid: 21bb81a3-02ae-47f3-bfd0-26c7c5ca644d
  testResult: Passed
  message: >2+


    Description: column SafetyStockLevel must not contain 0 or NULL

    First Data Source: AW

    First Query:

        SELECT * 
    FROM [Production].[Product]

    WHERE SafetyStockLevel = 0 OR SafetyStockLevel IS NULL


  startTime: 2023-02-20T14:45:25.9769451+01:00
  endTime: 2023-02-20T14:45:25.9793292+01:00
  duration: 00:00:00.0023841
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: 402ef517-a196-4fd4-8942-09957068637b
    suite: Smoke test
    order: 3
    testCase: Production.Product
    name: 0 and NULL values
    testFullName: '[Smoke test].[3].[Production.Product].[0 and NULL values]'
    descripiton: column SafetyStockLevel must not contain 0 or NULL
    firstDataSource: AW
    firstQuery: >
      SELECT * 

      FROM [Production].[Product]

      WHERE SafetyStockLevel = 0 OR SafetyStockLevel IS NULL
    secondDataSource: 
    secondQuery: 
    expectation: SetIsEmpty
    timeout: 0
    settings:
      TestSuite: Smoke test
      Order: 3
      TestCase: Production.Product
      Name: 0 and NULL values
      Description: column SafetyStockLevel must not contain 0 or NULL
      First Data Source: AW
      First Query: >
        SELECT * 

        FROM [Production].[Product]

        WHERE SafetyStockLevel = 0 OR SafetyStockLevel IS NULL
      Expectation: SetIsEmpty
  testDefinitionGuid: 402ef517-a196-4fd4-8942-09957068637b
  testName: 0 and NULL values
  testFullName: '[Smoke test].[3].[Production.Product].[0 and NULL values]'
  testSuite: Smoke test
  testCase: Production.Product
  description: column SafetyStockLevel must not contain 0 or NULL
  firstDataSource: AW
  firstQuery: >
    SELECT * 

    FROM [Production].[Product]

    WHERE SafetyStockLevel = 0 OR SafetyStockLevel IS NULL
  secondDataSource: 
  secondQuery: 
  expectation: SetIsEmpty
- executionGuid: 3cdf639d-31b1-4cbd-8243-2ea3b9b041d0
  testResult: Failed
  message: >+
    No row was expected but at least one row exists.


    ┌──────────────┬───────────┐

    │StandardCost  │ListPrice  │

    ╞══════════════╪═══════════╡

    │666.0000      │0.0000     │

    └──────────────┴───────────┘



    Description: value in column StandardCost must not be greater than value in column ListPrice

    First Data Source: AW

    First Query:

        SELECT StandardCost, ListPrice 
    FROM [Production].[Product]

    WHERE StandardCost > ListPrice


  startTime: 2023-02-20T14:45:25.9862992+01:00
  endTime: 2023-02-20T14:45:25.9920830+01:00
  duration: 00:00:00.0057838
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: e196f20e-6bb6-4a30-a897-6696edaa0025
    suite: Smoke test
    order: 4
    testCase: Production.Product
    name: equal values
    testFullName: '[Smoke test].[4].[Production.Product].[equal values]'
    descripiton: value in column StandardCost must not be greater than value in column ListPrice
    firstDataSource: AW
    firstQuery: >
      SELECT StandardCost, ListPrice 

      FROM [Production].[Product]

      WHERE StandardCost > ListPrice
    secondDataSource: 
    secondQuery: 
    expectation: SetIsEmpty
    timeout: 0
    settings:
      TestSuite: Smoke test
      Order: 4
      TestCase: Production.Product
      Name: equal values
      Description: value in column StandardCost must not be greater than value in column ListPrice
      First Data Source: AW
      First Query: >
        SELECT StandardCost, ListPrice 

        FROM [Production].[Product]

        WHERE StandardCost > ListPrice
      Expectation: SetIsEmpty
  testDefinitionGuid: e196f20e-6bb6-4a30-a897-6696edaa0025
  testName: equal values
  testFullName: '[Smoke test].[4].[Production.Product].[equal values]'
  testSuite: Smoke test
  testCase: Production.Product
  description: value in column StandardCost must not be greater than value in column ListPrice
  firstDataSource: AW
  firstQuery: >
    SELECT StandardCost, ListPrice 

    FROM [Production].[Product]

    WHERE StandardCost > ListPrice
  secondDataSource: 
  secondQuery: 
  expectation: SetIsEmpty
- executionGuid: 933d40e3-6882-4782-baf5-f90ba71071af
  testResult: Failed
  message: >+
    No row was expected but at least one row exists.


    ┌───────────┬─────────────────┬───────────────┬──────────┬───────────────────┬───────┬──────────────────┬──────────────┬──────────────┬───────────┬──────┬─────────────────────┬───────────────────────┬────────┬───────────────────┬─────────────┬───────┬───────┬──────────────────────┬────────────────┬───────────────────────┬─────────────┬──────────────────┬───────────────────────────┬──────────────────────┐

    │ProductID  │Name             │ProductNumber  │MakeFlag  │FinishedGoodsFlag  │Color  │SafetyStockLevel  │ReorderPoint  │StandardCost  │ListPrice  │Size  │SizeUnitMeasureCode  │WeightUnitMeasureCode  │Weight  │DaysToManufacture  │ProductLine  │Class  │Style  │ProductSubcategoryID  │ProductModelID  │SellStartDate          │SellEndDate  │DiscontinuedDate  │rowguid                    │ModifiedDate          │

    ╞═══════════╪═════════════════╪═══════════════╪══════════╪═══════════════════╪═══════╪══════════════════╪══════════════╪══════════════╪═══════════╪══════╪═════════════════════╪═══════════════════════╪════════╪═══════════════════╪═════════════╪═══════╪═══════╪══════════════════════╪════════════════╪═══════════════════════╪═════════════╪══════════════════╪═══════════════════════════╪══════════════════════╡

    │1          │Adjustable Race  │AR-5381        │False     │False              │       │1000              │750           │0.0000        │0.0000     │      │                     │                       │        │0                  │             │       │       │                      │                │4/30/2008 12:00:00 AM  │             │                  │694215b7-08f7-4c0d-acb...  │2/8/2014 10:01:36 AM  │

    └───────────┴─────────────────┴───────────────┴──────────┴───────────────────┴───────┴──────────────────┴──────────────┴──────────────┴───────────┴──────┴─────────────────────┴───────────────────────┴────────┴───────────────────┴─────────────┴───────┴───────┴──────────────────────┴────────────────┴───────────────────────┴─────────────┴──────────────────┴───────────────────────────┴──────────────────────┘



    Description: date in column SellStartDate must not be later than 1.1.2000

    First Data Source: AW

    First Query:

        SELECT * 
    FROM [Production].[Product]

    WHERE SellStartDate > 2000-01-01


  startTime: 2023-02-20T14:45:25.9940947+01:00
  endTime: 2023-02-20T14:45:26.0170642+01:00
  duration: 00:00:00.0229695
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: c77b56d2-c39a-4081-a41b-c0e50cdee09f
    suite: Smoke test
    order: 5
    testCase: Production.Product
    name: date not later than 1.1.2000
    testFullName: '[Smoke test].[5].[Production.Product].[date not later than 1.1.2000]'
    descripiton: date in column SellStartDate must not be later than 1.1.2000
    firstDataSource: AW
    firstQuery: >
      SELECT * 

      FROM [Production].[Product]

      WHERE SellStartDate > 2000-01-01
    secondDataSource: 
    secondQuery: 
    expectation: SetIsEmpty
    timeout: 0
    settings:
      TestSuite: Smoke test
      Order: 5
      TestCase: Production.Product
      Name: date not later than 1.1.2000
      Description: date in column SellStartDate must not be later than 1.1.2000
      First Data Source: AW
      First Query: >
        SELECT * 

        FROM [Production].[Product]

        WHERE SellStartDate > 2000-01-01
      Expectation: SetIsEmpty
  testDefinitionGuid: c77b56d2-c39a-4081-a41b-c0e50cdee09f
  testName: date not later than 1.1.2000
  testFullName: '[Smoke test].[5].[Production.Product].[date not later than 1.1.2000]'
  testSuite: Smoke test
  testCase: Production.Product
  description: date in column SellStartDate must not be later than 1.1.2000
  firstDataSource: AW
  firstQuery: >
    SELECT * 

    FROM [Production].[Product]

    WHERE SellStartDate > 2000-01-01
  secondDataSource: 
  secondQuery: 
  expectation: SetIsEmpty
- executionGuid: ebc9f3a2-8303-43af-8343-8dcdded818dc
  testResult: Passed
  message: >2+


    Description: value in column TransactionType must contain only values W, S, P

    First Data Source: AW

    First Query:

        SELECT * 
    FROM [Production].[TransactionHistory]

    WHERE TransactionType NOT IN ('W', 'S', 'P')


  startTime: 2023-02-20T14:45:26.0189027+01:00
  endTime: 2023-02-20T14:45:26.0571022+01:00
  duration: 00:00:00.0381995
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: d7d39a64-0631-4473-8cd9-37fc287b3a09
    suite: Smoke test
    order: 6
    testCase: Production.Product
    name: values W, S, P in TransactionType
    testFullName: '[Smoke test].[6].[Production.Product].[values W, S, P in TransactionType]'
    descripiton: value in column TransactionType must contain only values W, S, P
    firstDataSource: AW
    firstQuery: >
      SELECT * 

      FROM [Production].[TransactionHistory]

      WHERE TransactionType NOT IN ('W', 'S', 'P')
    secondDataSource: 
    secondQuery: 
    expectation: SetIsEmpty
    timeout: 0
    settings:
      TestSuite: Smoke test
      Order: 6
      TestCase: Production.Product
      Name: values W, S, P in TransactionType
      Description: value in column TransactionType must contain only values W, S, P
      First Data Source: AW
      First Query: >
        SELECT * 

        FROM [Production].[TransactionHistory]

        WHERE TransactionType NOT IN ('W', 'S', 'P')
      Expectation: SetIsEmpty
  testDefinitionGuid: d7d39a64-0631-4473-8cd9-37fc287b3a09
  testName: values W, S, P in TransactionType
  testFullName: '[Smoke test].[6].[Production.Product].[values W, S, P in TransactionType]'
  testSuite: Smoke test
  testCase: Production.Product
  description: value in column TransactionType must contain only values W, S, P
  firstDataSource: AW
  firstQuery: >
    SELECT * 

    FROM [Production].[TransactionHistory]

    WHERE TransactionType NOT IN ('W', 'S', 'P')
  secondDataSource: 
  secondQuery: 
  expectation: SetIsEmpty
- executionGuid: ceaec443-48c6-4583-a393-c32260822804
  testResult: Failed
  message: >+
    Different value on row # 45 in column 1 (Name): in the first set '! Front Brake', in the second set '! Front Brakes'.


    The first set and the second set are different:


    FIRST SET:

    ┌────┬───────────────┐

    │#   │Name           │

    ╞════╪═══════════════╡

    │45  │! Front Brake  │

    └────┴───────────────┘



    SECOND SET:

    ┌────┬────────────────────┐

    │#   │EnglishProductName  │

    ╞════╪════════════════════╡

    │45  │! Front Brakes      │

    └────┴────────────────────┘




    Description: value Name in Product table must be equal as in DimProduct table

    First Data Source: AW

    First Query:

        SELECT DISTINCT Name
    FROM [Production].[Product] 

    ORDER BY Name



    Second Data Source: AWDW

    Second Query:

        SELECT DISTINCT EnglishProductName 
    FROM [dbo].[DimProduct]

    ORDER BY EnglishProductName


  startTime: 2023-02-20T14:45:26.0588722+01:00
  endTime: 2023-02-20T14:45:26.1349968+01:00
  duration: 00:00:00.0761246
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: b3abb324-115a-4683-8510-b7d74f5c0bab
    suite: Integration test
    order: 7
    testCase: Production.Product x dbo.DimProduct
    name: equal value Name
    testFullName: '[Integration test].[7].[Production.Product x dbo.DimProduct].[equal value Name]'
    descripiton: value Name in Product table must be equal as in DimProduct table
    firstDataSource: AW
    firstQuery: >
      SELECT DISTINCT Name

      FROM [Production].[Product] 

      ORDER BY Name
    secondDataSource: AWDW
    secondQuery: >
      SELECT DISTINCT EnglishProductName 

      FROM [dbo].[DimProduct]

      ORDER BY EnglishProductName
    expectation: SetsMatch
    timeout: 0
    settings:
      TestSuite: Integration test
      Order: 7
      TestCase: Production.Product x dbo.DimProduct
      Name: equal value Name
      Description: value Name in Product table must be equal as in DimProduct table
      First Data Source: AW
      First Query: >
        SELECT DISTINCT Name

        FROM [Production].[Product] 

        ORDER BY Name
      Second Data Source: AWDW
      Second Query: >
        SELECT DISTINCT EnglishProductName 

        FROM [dbo].[DimProduct]

        ORDER BY EnglishProductName
      Expectation: SetsMatch
  testDefinitionGuid: b3abb324-115a-4683-8510-b7d74f5c0bab
  testName: equal value Name
  testFullName: '[Integration test].[7].[Production.Product x dbo.DimProduct].[equal value Name]'
  testSuite: Integration test
  testCase: Production.Product x dbo.DimProduct
  description: value Name in Product table must be equal as in DimProduct table
  firstDataSource: AW
  firstQuery: >
    SELECT DISTINCT Name

    FROM [Production].[Product] 

    ORDER BY Name
  secondDataSource: AWDW
  secondQuery: >
    SELECT DISTINCT EnglishProductName 

    FROM [dbo].[DimProduct]

    ORDER BY EnglishProductName
  expectation: SetsMatch
- executionGuid: ab65ada0-41f3-4601-b3cf-95635348f248
  testResult: Failed
  message: >+
    Different value on row # 1 in column 1 (): in the first set '! 606', in the second set '! 776286'.


    The first set and the second set are different:


    FIRST SET:

    ┌───┬───────┐

    │#  │       │

    ╞═══╪═══════╡

    │1  │! 606  │

    └───┴───────┘



    SECOND SET:

    ┌───┬──────────┐

    │#  │          │

    ╞═══╪══════════╡

    │1  │! 776286  │

    └───┴──────────┘




    Description: each product from table DimProduct must have record in table FactProductInventory

    First Data Source: AWDW

    First Query:

        SELECT COUNT(*) 
    FROM [dbo].[DimProduct]



    Second Data Source: AWDW

    Second Query:

        SELECT COUNT(*) FROM [dbo].[FactProductInventory]


  startTime: 2023-02-20T14:45:26.1411046+01:00
  endTime: 2023-02-20T14:45:26.4797452+01:00
  duration: 00:00:00.3386406
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: 612cc79f-86db-4ae8-9765-15149911f19b
    suite: Integration test
    order: 8
    testCase: dbo.DimProduct x dbo.FactProductInventory
    name: each product has record
    testFullName: '[Integration test].[8].[dbo.DimProduct x dbo.FactProductInventory].[each product has record]'
    descripiton: each product from table DimProduct must have record in table FactProductInventory
    firstDataSource: AWDW
    firstQuery: >
      SELECT COUNT(*) 

      FROM [dbo].[DimProduct]
    secondDataSource: AWDW
    secondQuery: >
      SELECT COUNT(*) FROM [dbo].[FactProductInventory]
    expectation: SetsMatch
    timeout: 0
    settings:
      TestSuite: Integration test
      Order: 8
      TestCase: dbo.DimProduct x dbo.FactProductInventory
      Name: each product has record
      Description: each product from table DimProduct must have record in table FactProductInventory
      First Data Source: AWDW
      First Query: >
        SELECT COUNT(*) 

        FROM [dbo].[DimProduct]
      Second Data Source: AWDW
      Second Query: >
        SELECT COUNT(*) FROM [dbo].[FactProductInventory]
      Expectation: SetsMatch
  testDefinitionGuid: 612cc79f-86db-4ae8-9765-15149911f19b
  testName: each product has record
  testFullName: '[Integration test].[8].[dbo.DimProduct x dbo.FactProductInventory].[each product has record]'
  testSuite: Integration test
  testCase: dbo.DimProduct x dbo.FactProductInventory
  description: each product from table DimProduct must have record in table FactProductInventory
  firstDataSource: AWDW
  firstQuery: >
    SELECT COUNT(*) 

    FROM [dbo].[DimProduct]
  secondDataSource: AWDW
  secondQuery: >
    SELECT COUNT(*) FROM [dbo].[FactProductInventory]
  expectation: SetsMatch
- executionGuid: a24a9b95-ec36-4f0b-a057-aa91487b3b7d
  testResult: Error
  message: 
  startTime: 2023-02-20T14:45:26.4889732+01:00
  endTime: 2023-02-20T14:45:26.4921964+01:00
  duration: 00:00:00.0032232
  exceptionMessage: >-
    Invalid column name 'x'.

    Invalid column name 'x'.

    Invalid column name 'SUM'.
  testDefinition:
    testDefinitionGuid: 6c0cd720-d96b-4337-9458-ed3061c5a315
    suite: Integration test
    order: 9
    testCase: Sales.SalesOrderHeader x dbo.FactInternetSales
    name: equal total sum
    testFullName: '[Integration test].[9].[Sales.SalesOrderHeader x dbo.FactInternetSales].[equal total sum]'
    descripiton: Total sum of each product in table SalesOrderHeader equal to total sum in table FactInternetSales
    firstDataSource: AW
    firstQuery: "SELECT x, SUM y \nFROM [Sales].[SalesOrderHeader] H\nJOIN Sales.SalesOrderDetail D\nON D.SalesOrderID = H.SalesOrderID\nGROUP BY x\nORDER BY x\n \n"
    secondDataSource: AWDW
    secondQuery: >
      SELECT SUM(z) 

      FROM [dbo].[FactInternetSales] F

      JOIN [dbo].[DimProduct] D

      ON F.z = D.z

      GROUP BY z

      ORDER BY z
    expectation: SetsMatch
    timeout: 0
    settings:
      TestSuite: Integration test
      Order: 9
      TestCase: Sales.SalesOrderHeader x dbo.FactInternetSales
      Name: equal total sum
      Description: Total sum of each product in table SalesOrderHeader equal to total sum in table FactInternetSales
      First Data Source: AW
      First Query: "SELECT x, SUM y \nFROM [Sales].[SalesOrderHeader] H\nJOIN Sales.SalesOrderDetail D\nON D.SalesOrderID = H.SalesOrderID\nGROUP BY x\nORDER BY x\n \n"
      Second Data Source: AWDW
      Second Query: >
        SELECT SUM(z) 

        FROM [dbo].[FactInternetSales] F

        JOIN [dbo].[DimProduct] D

        ON F.z = D.z

        GROUP BY z

        ORDER BY z
      Expectation: SetsMatch
  testDefinitionGuid: 6c0cd720-d96b-4337-9458-ed3061c5a315
  testName: equal total sum
  testFullName: '[Integration test].[9].[Sales.SalesOrderHeader x dbo.FactInternetSales].[equal total sum]'
  testSuite: Integration test
  testCase: Sales.SalesOrderHeader x dbo.FactInternetSales
  description: Total sum of each product in table SalesOrderHeader equal to total sum in table FactInternetSales
  firstDataSource: AW
  firstQuery: "SELECT x, SUM y \nFROM [Sales].[SalesOrderHeader] H\nJOIN Sales.SalesOrderDetail D\nON D.SalesOrderID = H.SalesOrderID\nGROUP BY x\nORDER BY x\n \n"
  secondDataSource: AWDW
  secondQuery: >
    SELECT SUM(z) 

    FROM [dbo].[FactInternetSales] F

    JOIN [dbo].[DimProduct] D

    ON F.z = D.z

    GROUP BY z

    ORDER BY z
  expectation: SetsMatch
- executionGuid: 39c23567-00d0-490d-b0ea-194a490d8f6e
  testResult: Passed
  message: >+
    Both sets have the same number of rows and their values match.


    Description: Count of rows

    First Data Source: AW

    First Query:

        SELECT COUNT(*) 
    FROM [Sales].[SalesOrderHeader] H

    JOIN Sales.SalesOrderDetail D

    ON D.SalesOrderID = H.SalesOrderID

    WHERE OnlineOrderFlag = 1



    Second Data Source: AWDW

    Second Query:

        SELECT COUNT(*) FROM [dbo].[FactInternetSales]


  startTime: 2023-02-20T14:45:26.4931200+01:00
  endTime: 2023-02-20T14:45:26.8134091+01:00
  duration: 00:00:00.3202891
  exceptionMessage: 
  testDefinition:
    testDefinitionGuid: fcab19e2-bf78-4b2f-a7a9-66fa7f505059
    suite: Integration test
    order: 1
    testCase: Sales.SalesOrderHeader x dbo.FactInternetSales
    name: Sales.SalesOrderHeader x dbo.FactInternetSales
    testFullName: '[Integration test].[1].[Sales.SalesOrderHeader x dbo.FactInternetSales].[Sales.SalesOrderHeader x dbo.FactInternetSales]'
    descripiton: Count of rows
    firstDataSource: AW
    firstQuery: >
      SELECT COUNT(*) 

      FROM [Sales].[SalesOrderHeader] H

      JOIN Sales.SalesOrderDetail D

      ON D.SalesOrderID = H.SalesOrderID

      WHERE OnlineOrderFlag = 1
    secondDataSource: AWDW
    secondQuery: >
      SELECT COUNT(*) FROM [dbo].[FactInternetSales]
    expectation: SetsMatch
    timeout: 0
    settings:
      TestSuite: Integration test
      Order: 1
      TestCase: Sales.SalesOrderHeader x dbo.FactInternetSales
      Name: Sales.SalesOrderHeader x dbo.FactInternetSales
      Description: Count of rows
      First Data Source: AW
      First Query: >
        SELECT COUNT(*) 

        FROM [Sales].[SalesOrderHeader] H

        JOIN Sales.SalesOrderDetail D

        ON D.SalesOrderID = H.SalesOrderID

        WHERE OnlineOrderFlag = 1
      Second Data Source: AWDW
      Second Query: >
        SELECT COUNT(*) FROM [dbo].[FactInternetSales]
      Expectation: SetsMatch
  testDefinitionGuid: fcab19e2-bf78-4b2f-a7a9-66fa7f505059
  testName: Sales.SalesOrderHeader x dbo.FactInternetSales
  testFullName: '[Integration test].[1].[Sales.SalesOrderHeader x dbo.FactInternetSales].[Sales.SalesOrderHeader x dbo.FactInternetSales]'
  testSuite: Integration test
  testCase: Sales.SalesOrderHeader x dbo.FactInternetSales
  description: Count of rows
  firstDataSource: AW
  firstQuery: >
    SELECT COUNT(*) 

    FROM [Sales].[SalesOrderHeader] H

    JOIN Sales.SalesOrderDetail D

    ON D.SalesOrderID = H.SalesOrderID

    WHERE OnlineOrderFlag = 1
  secondDataSource: AWDW
  secondQuery: >
    SELECT COUNT(*) FROM [dbo].[FactInternetSales]
  expectation: SetsMatch
passedCount: 5
failedCount: 4
errorCount: 1
notYetExecutedCount: 0
inconclusiveCount: 0
skippedCount: 0
unknownCount: 0
totalCount: 10
